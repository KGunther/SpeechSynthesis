<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAgEAAAAAAAD/4gIcSUNDX1BST0ZJTEUAAQEAAAIMbGNtcwIQAABtbnRyUkdCIFhZ
        WiAH3AABABkAAwApADlhY3NwQVBQTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9tYAAQAAAADTLWxj
        bXMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApkZXNjAAAA/AAA
        AF5jcHJ0AAABXAAAAAt3dHB0AAABaAAAABRia3B0AAABfAAAABRyWFlaAAABkAAAABRnWFlaAAABpAAA
        ABRiWFlaAAABuAAAABRyVFJDAAABzAAAAEBnVFJDAAABzAAAAEBiVFJDAAABzAAAAEBkZXNjAAAAAAAA
        AANjMgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB0ZXh0AAAAAEZCAABYWVogAAAAAAAA9tYAAQAAAADTLVhZ
        WiAAAAAAAAADFgAAAzMAAAKkWFlaIAAAAAAAAG+iAAA49QAAA5BYWVogAAAAAAAAYpkAALeFAAAY2lhZ
        WiAAAAAAAAAkoAAAD4QAALbPY3VydgAAAAAAAAAaAAAAywHJA2MFkghrC/YQPxVRGzQh8SmQMhg7kkYF
        UXdd7WtwegWJsZp8rGm/fdPD6TD////bAEMABgQFBgUEBgYFBgcHBggKEAoKCQkKFA4PDBAXFBgYFxQW
        FhodJR8aGyMcFhYgLCAjJicpKikZHy0wLSgwJSgpKP/bAEMBBwcHCggKEwoKEygaFhooKCgoKCgoKCgo
        KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKP/CABEIAKAAoAMAIgABEQECEQH/
        xAAcAAACAwEBAQEAAAAAAAAAAAAEBQIDBgEABwj/xAAZAQACAwEAAAAAAAAAAAAAAAACAwABBAX/2gAM
        AwAAARACEAAAAVsiIc/qiRuHK9P3OmpAvVp7s2UiYV6AnwaMOywUtkpeILyrXzyBGgXisYfG3JMYOOhU
        Qd7ngGnt1OEOxhGpD0YMqm6HGwztq+zukHEKmxENBhFNVmLQvZ1378jvO6TOHKeVSAe03jyqe9UtqoHO
        e6Na+OS9b/pHcJucKirwjsD6uSgQld9a5jrPPM+xUIdHBRHKOSrsFoMr0rr9Kp4nUB1SzSlJcm9Pwmz5
        ZFWiwRelOWd2MaZTRZ0apvhs4GT5ugdMxAjKIbcJXpUb8wkqqCEyoGdg222Q0OKzOwJyWyu+cuutNaAE
        Vmfdoc02gNPlm/8An47tQnaoypMokM/KXyNcuLhJtYCx09qxqqbq64HziimPUBvtfmji71DjIj1e7Vq2
        mPoslPk6dC4YohyaAmgViHpwNdamHgq1qb3KyKnxvkob80rKpVDJiRluNNhWCdOmSlRy7lhBi1ge93xr
        a7fOb0kKp6GR51fWK6i+ARl5y++9KSPueqd96uW8YZppm3NV91C3kyoVOzu2ePK1Yvqur+BbK6+lDyKQ
        X5ot91gxl6UlPu8knQWPJzsZ1Dqxuiysim81j2V9kIOW2XPoX0r4T9Kuf//EACgQAAICAgEDBAIDAQEA
        AAAAAAECAAMEERITISIFEDEyFEEgI0IkM//aAAgBAAABBQLjNCMNTYmJl0047+oRfUXD9Xx5TcJm5vv+
        gdHHu1OosBBllmpfeSG7QiGftAWIxrWlNFdQMHzCZuD5EPzuBoLjDYTCdzuxroNhPpB0uEgZUCD3PY8o
        zRfhYW1AdljC3emP8INmtOKYS/2P9P8AR9iZuE+xWCVr43A8gdRmlKgz6xmlJnDyxR52fRjOU5eznUDb
        m5k+pCtx6jZF9WyFA9V5PW62oRK21N7jxDqNMY+dn1eGCGEbnGeo5H49XUnUabMDTCymotrsS1V+VjzU
        smOdW2t4ND7b9nbS5pD3cVmhF/HA/pdjSxmNc1TY163DnNwNKvIhdWX/APnyjGcpucpm3R12eBhraGto
        QRFYqbSXb02w/l67zR3hVDial53r4N2h7xcZ3n4VsGG+7sGkPk4qNSy8T7mpHhpKD0mv/s7RjFaY7kQ3
        N1LbPA94v3xgOnMq1K0bu5EyGjuYzuY2zO4gtsWYOTWWXcXvOEQqT0vK0eIWdKYzeF9wrpqLX3ctPmW8
        Vts3G+Qu4V1D84eH1Gs9IPSxFsFFY8tDhbY1LY/qXXlObzsPJW6/GY1gZczRxMLf5J++d5K/aalZID2n
        YYE+jHyfvNQ7Ea1tGzcV9M1+1pt/IorvPOq1On1eS4q7axhxvcFbq12qR0CJbX5qvfEqcUq3jzWDiYtS
        mbn63MW8rflXi6rq81wbdXfV7n3Mi3iFHObKyxhZMvibsVB1KqeCcJ0yYtbQK49xEOmLTHbi1NvTsd/F
        juZXkeBpYMrzTbuZHGAuyiHXTMWs7WuEaH8Nzcc7lN5KVvyGtkSwd66laBdNgcaTS9DTpicBDqWwz9+/
        7Mrbi1baiNHEYStOUJVGfLKnDtKDE9TACMHVhOHsv8T7I5WVt25di2y13TQObLGb+1bfGq9t4mY1a49y
        31a9j2EH8P3FJBW/sbYTuVdvbcr+Wtnp+YaopDKo2W+Z+j7a7N76nAzU+E9ln+se2elZo5f/xAAjEQAC
        AgIBBAMBAQAAAAAAAAAAAQIRAyESBBAgMRMyUSJB/9oACAECEQE/AWKQ1jTtmScX9URFLt70PFRHFy0i
        WZ3SOcu9i9knRzMSvbMc/wCqRw2f54WYYfLKmySSdGHaovjLROab0S9d32Tou9kZNeu3DZKLoVLbE1LV
        EcMXEeCSPjZx/SK/BiytPYpxmjiqo6OCWORwpaJXZaSItMenob7ptHSSuLTHoqLdmRJ+hrijki4+HTZO
        Lo+w48fRTM890WLwujDmHMyZktI99lKvL5ZVXj//xAAlEQACAgICAgEEAwAAAAAAAAAAAQIRAyEEEhMx
        IAUQIkEyQmH/2gAIAQERAT8BqzqSjH+xPq/4konjscep2cWpIj9Rbfoycqbbbehyo5GTr6Ls2L/S+3ol
        HR1tnJXRUiWNqNyFPschUykIhDyS6xI4IR/RPHGvRlwvHtejkSrZD8o/kYMTS2Z0xI6HHxeOP3o5GGKl
        QooVUZaZhh3dD46W7HkakLImdizk43KVlKOmT46lpEsE4kLx7MmRyaLt7EkbJaQ80pRpkGv39lInCM/Z
        mgoNULZbWiI5HjTPD8M0e2xaYnf2jjbVnQbr4zhQkRhYnRSkOG/l418Hs//EADIQAAEDAQYEAwYHAAAA
        AAAAAAEAAhEhEBIgMUFRAyIwYSMycRNCUoGRkgRAYnKhwdH/2gAIAQAABj8CtgprK3taLw2fVczQR0ar
        O2LKW8oJWUKjZO/TobaINkKTxR9FWSuUR+QjU5oWHq1wjo3GC9GZVGNWXD+i8Vn2oOYZBxjocvnKyrgr
        5TmFLTiHQN411soheLyddkbkt9VeaQ70Wyp5tRhGO6DCkAxgqFymCr51TBgkoI20sqvElztpV3htDCMl
        DhBwVot27qT7owi0W1cAUYsyBH6hKozh/as49FqqErOfVVF15wQ1wJwSguI6fK2UHcVznXjVQ1ogaFXm
        sM9ipJWeDmyQLHeJsU0cYc4Qshjzdzb2RbxHFnFHvBey/EcrviGqjP0UEILj/sKZOSK7KLDFVkqqD8sE
        ITumnaib8TaJsOjjNaPmvZcUQdj/AEpvgdk6HBzYyXDcQGgZBSVAWy7boRqivLKhphxPKdkLxk6lZ4DY
        O7YQnztV810d/qk6lOdJrQDa286wfygWyhJKzz6ANlcnUUHQoRYArzKjZea762C4ZKnqXlB0trZLsgqJ
        peJ7KA4B2x6sjKyRbJXLnkpJqgOJWVLTIwTj7KW5YKom0Gfkg5vTpRVXLiCY4ZHMIEZHpV6Homt7r2L9
        Tyr/xAAiEAACAgIDAQADAQEAAAAAAAAAAREhMUEQUWFxgZGhscH/2gAIAQAAAT8hUirwbgJ0C9C3Q2JW
        3V2V26YWRyT1DsKvFiOYieCqdJ6K5iJJToY1MZtCEUVBvBwLYniGaU1e2JEHayO3xTC48BRhxqh2sVUM
        gzXGaSSNsWxTYl+oB2VHsgKE8MmBpQMDqOkaQpjFgQoZgJ2IlwxyvUIS/wABpJg8qjHE62SESUD6GtBB
        xweWCWO8Ip4XmIAew5N8XIyQOArl1fYobdf7ZEFB6P8AWAqsKyxiwJsheMyXBZfhGWZcMOIoi2pljXhP
        MG2WSb/RIpbZNf8Aptwi97gjAwik4GSCySbfCRGSSeXosenaRa2dwxnvwY05ZqtLFiyEx9ITobbpkhog
        KBaxQ8/w/MijC4L42GrqLaIGUbexw1R2UI6MsExZ4GWLy+inZlfwkxFGYmd4NEkixRWtFlC6VPBCax/R
        b21gEa9MaXxjnuJymPhJbT/QmpLuCINzVDX0b1nP/gmKKLrQna6PHEz/AAWTKhGNLhimtJTY8xm29sfE
        NojcQuEkT6vwtLf4QJmbfkegfk676sPCw2VhjSE2EyUwTIC4JNXAxQJEK5SlMzVMG4URkXQNSBcAzuxC
        Fat0kykf5ImZMgROBARCEHs3i8IaFTuZWjPDn/BpjF8/p+B0ECU2n7BrdxiTuCWhTYbpKX3hKMZkJmST
        uumWl/ZYhUGTOFeE26kgTTPh1jwpxr0a1fSuWxG2CfR0DBGOia0PT0vg9huxyEe4pg0SPW6F+X/BHDab
        ZT6Ejkit4NovXJki2Jv9mMZdJlmZ/AIL2vZ+5n+cYqBhQfciUpaVgiWW4C7UMNCtJP7ByrsUU1/DgcPY
        T2KNBgn3X/A+QrANJa5JI08KC0kKnZnk9IWC180aSh0EQ9D/AOAQJTZvB+DbEicFkM98MyG9YxltlZjS
        IpoKbuxCkT6w8oOXOxDFKE1mUViOYLBkYRdHgQlECtCsHDFj6Is2SocgnlPBWs20MlKCNUOXIgTQhaQ1
        04TpgbofH4ioh+uDuBvib4PXhZa2SU+WETPYpoLB1FMbNUFS9ZFNa+B4nZyOLatTkTlmbXA5G/glPgkP
        IsmIjG3siWZPTaN6ZgkLepvpCq2+eFa0x6zyxC7mMErqebH50l0QNR2JChKjAeRDVGBE4JU0hGCH4PiK
        ej2Mj6JtlEPUaqvYtasXohocolPneKEhkLImbNKlkWxEp4EXh/vgmmZPeXizKeB0z5ECynS96P/aAAwD
        AAABEQIRAAAQrAPkYMotR7mdBSx9lGMk18o0eSt7UrmnWVALehKFz9GxWxKTAiGEQK4AkE9HlylB8xod
        8y0f7FfnhT9MmQL4Qv48ZfGeFkPT/NWz/8QAIBEBAQEAAgMBAAMBAAAAAAAAAQARITEQQVEgYXGBsf/a
        AAgBAhEBPxBZYSj2fWZ6rW7YuWc7ZjUQ7gAPN8tlDubiMeJJjP5t+9ypUavrwyPcI5IuDSgev8ttN7zT
        wektt0slYh1LSu2Rgu6wzEHlEEtksf8Adk/szllOGBs2PFuOUsNxlnMvOX2/10RzVje9OyzOsRor47ul
        l+8mcm5AYRYQdkmBu/K8wI/c8cj7MnSDBerEN/AkJC8RpzE+yVWvhBn5FOSU0fz/AP/EAB4RAQEBAQAD
        AQADAAAAAAAAAAEAESEQMUFRIGGh/9oACAEBEQE/EP0nRG9iS8ZB6nIiBk+yZYx5sAS+R8EhBTlr7sgJ
        gZDwscxMZ9Yh+xMyQduW2d1ggOAnLS30df5OB9mAD3Cz5mIzpP5g/tffhN5IzH1fgj2WnZY8tml1F0k0
        kZYurQvWXoG3fcnOmkk4mB+TydRDkCcJvgwZG7ZPZTnxwSsLB1bFW0tMv55GYA+R7X1+7QuW8jymeE3j
        Kts53r6vmno9X0fwSweMC6EeB5HG3//EACUQAQACAgICAwACAwEAAAAAAAEAESExQVFhcYGRoRDBsdHh
        8P/aAAgBAAABPxDIaouUZ1GZWPslIVGx98Slclu5eYpBwtzfol9iAjXwmOKANPENgoyzFZmGJscxhvUr
        SPFym6j3KSntLXig0fKodRj9ladHPiZgKdnENr1mfapEY7bNAHmUVQydpllFYH+IdbjfBiNp2wU67jBm
        HPRxc9WRczTYtw+YLZt44JhlUuaI5OxaOzJEsqofiASAwCpjbcA2lxGsJZvMCXUoLgbhWtqH1IGBlOJi
        IM8Fgp7iIfuDxL65bjLEeVECRLNylwxSAcpk3KkspERm8QmFm61EGIaWF3KcBUrVsGruOp3c+dRinqe4
        oo5iTyWHDKqLiRIdlNQeDv3LUL7QKGPCv9y7qurQr8WClaxNnh6YUKSrxMzkxKoi4riZJILdywDdCXtg
        4SgixcJyCHdCJGYjq8wsbItC7Y4pT0qXCj7mwcBkV1KWlGDSdkFiwtOSXMp8moN0ZiVcUVmwU4SlfESw
        8woxRpnYwK3cMk4B2yxqwhavBx0fEHs+YjoPcF/AUAOR5SGwRHEzjeGG6cKLg0kpQLSFfCSx4W7f08Rn
        VyrtA9TKMxiHIgxOpsxzN1SpqASUGIjZB2Fu6iMcsZGNI+TFOPsiWbemaAfELXBVqoqUVbCosE4v5Lf8
        mUrEuSIFQeA2JjABuN9UdJ3E0DLifqxA9NDp6XWSzBK66X81ligaWFi78T3w+41qKFSSnRGvETVo7Eky
        g6KP6lNeMz+FOPcsMNm8uH+ZwkhkgoJfcVPCiZ2lmMBdw6DOYADu5QZaSiNVAIG3RuAqJfZBcK1uOoGU
        Anq8noZcIZpIf1ZRLDgD+EsX3jZay/hE1/YHL53DvjE2X/f/ALMwz+cxMI4QSqoKWpT0xSljN1GC6hGE
        wlsyTG3iAEUP2GP2JyAbTZ/UplVbQK6dnxH2AxCjxeSAZiLjeqsjXRri1kHDmyNxQ7DO9LitcfBtmXj4
        YxVA7EKmUXnBQcrOalNDHMLcF5QAXFGoNh32PFkpG41B7ab34g2dDBvjdXnqLZv2Y9Rw3rQqWdWphwoK
        HxLfZBrBWiOwGuVmEvyoLWjuIE1cKxKUuzBQLMFq0sKR7S0O3o4lgIu5hrzFNYSvUpLHZL/A9Re4VWeK
        yfrGdsWp50T6ZzzccpUYXtDhkD/UworS1HhTX4eIWJL2NbCjxG1ICoBnDUcoc0r5PvcRCqBUUgAmfMUr
        rmtfUzC64o8QFGsjsu2Yii6UHIIqGZU6q9xaNDbbZDmqgCMgUcyHF9QakAt0yZUXM9sbeS0TByH8gwej
        OXL9EPExaorDn6hkEtLGP7pl6Iga4iceoAHDNll14RVfhARAregOZnE8zBOBHLLUq1qVk69RVPUKnAAq
        MihwoO5SduUxWmoPYzDLgQFGXAf4KsfM2vUAeyZkXs+IK5mH2Ov2VsIALydxZBNElDtiV5m8vUrtlLmv
        iFgPKgKHGr7u4H4XkXjuHhFyDRCQ1CAeZVCwAQaQB/EBhhcSPFw43tXFXcxnzMgGqbIO7bfPP/vMMqsP
        cOm8hLGLhQAallkFyGIgIS0NX4xC1PAEbdbdNq6YStBSD4qBaIFwmNEFwGKsHqGkaMYj9CXCiiiKiFMw
        ob6DsmINZIStxArZX3LnZm6mkxLXFwwwoGfhF9BUJ2y15zMM8s20esypQDcCDXaxLiNy9kuLm8RkEDdy
        wmyc0F3mR5MRnkRELnvk9MGj4UoDJcqiWV/0mu80DVuCaQbK/wByi3vJ6lsX/KlkepjD6jZ7Kfb6lDqU
        pG9p5Az/AABaZ2QSye7mcm/UFvH9jWPyuQy8yEy9/ErVrBXp3fmNkdrcsAcFS0XQ2syyxiDoP+xMKdxJ
        h+YaAgHIygr0TOhomF4hchrD+JojTasF6uVrGm/uOtQHgfMOJ+IVLqzwzBJUWoOcKnMWUVRd+qrzy5Y3
        LU0PGYTDeZ1/Q8T/2Q==
</value>
  </data>
</root>